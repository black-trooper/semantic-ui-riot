<su-validation-error class="{ state.blockMessage ? 'ui error message' : '' }">
  <div if="{ state.errors[props.name] }" class="ui basic pointing prompt label transition visible">
    <div each="{ message in state.errors[props.name] }">{ message }</div>
  </div>

  <ul if="{ state.blockMessage }" class="list">
    <template each="{ errors in Object.values(state.errors) }">
      <li each="{ message in errors }">{ message }</li>
    </template>
  </ul>

  <style>
    :host.ui.error.message {
      display: block !important;
    }
  </style>

  <script>
    export default {
      state: {
        errors: {}
      },

      onMounted,
      onBeforeUpdate,
    }

    function onMounted() {
      this.update()
    }

    function onBeforeUpdate(props, state) {
      state.errors = props.errors || {}
      state.blockMessage = Object.keys(state.errors).length > 0 && !props.name
    }
  </script>
</su-validation-error>